# hugging face api token, can be generated within your account on the platform. Will be required
# for downloading gemma LLM.
hugging_face_api_key: ""

# the prompt that will be used for generating the dataset.
# NOTE: [prompts_number] and [category_name] are mandatory placeholders.
# [prompts_number] will be replaced with prompts_num from this config;
# [category_name] will be replaced with one of the strings stored in obj_categories list.

instruction_prompt: "Task: Create a dataset of fully completed, semantically and grammatically correct witten prompts for generating 3D objects using AI.
                     Distinctive Features: Include one or two unique features, such as color, shape, or pose.
                     Category Specificity: Ensure all objects are exclusively from the [category_name] category.
                     Architecture: If selecting architecture objects, avoid describing interiors.
                     Exclusions: Do not describe bodies of water (e.g., lakes, seas, rivers) or open vast areas (e.g. fields, forests, planes, parks). 
                     Do not add those objects to prompts too.
                     Prompt Format: each prompt must be unique, limited to seven words or fewer and fully completed and grammatically correct written.
                     Use rules of English language.
                     Output: Generate a numbered list with [prompts_number] prompts."

# Categories of objects from where the LLM model could sample the data.
obj_categories: ["characters", "animals", "monsters", "robots", "architecture", "nature", "vehicles", "weapons and equipments",
                 "food and drinks", "gadgets and electronics", "decorative elements", "household items", "sports equipment",
                 "clothing", "furniture", "jewelry", "tools", "musical instruments"]

# Words that prompts should npt contain. Prompts with these words will be removed from the dataset and filtering stage.
filter_prompts_with_words: ["sky", "skies", "river", "ocean", "sea", "garden", "wind", "field", "terrain", "family",
                            "tow", "city", "accessories", "jungle", "forest", "space", "pool", "pond", "I", "i",
                            "fields", "horizon", "oops", "hillside", "underwater", "floor", "grass", "nature", "mist",
                            "air", "waterfall", "music", "sunset", "sunrise", "beach", "room", "cluster", "accents",
                            "melody", "wind", "winds", "tale", "sure", "prompts", "prompt", "sunbeam", "water", "word",
                            "words", "money", "copy", "vacuum", "outdoor", "to", "us", "miami", "kidding", "time",
                            "sunken", "point", "like", "breathing", "whoops", "labyrinth", "village", "seaside",
                            "cloud", "clouds", "exterior", "no", "unit", "harbor", "window", "grip", "island", "song",
                            "ambiance", "orbit", "hope", "melody", "animate", "vagina", "you", "please", "lake",
                            "d", "classification", "tasks", "task", "output", "here", "motion", "generate", "output",
                            "avoid", "category", "street", "park"
                          ]

# amount of prompts to generate per category.
prompts_number: 100

# specify number of times you want to run the model (total prompt size: prompts_num x len(obj_categories) x iteration_num
# if set to -1, the prompts will be generated infinitely
iterations_number: 2

# file where to output the prompts (.txt file)
prompts_output_file: "prompt_dataset.txt"
